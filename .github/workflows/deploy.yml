# XML을 대체하는 문서 / YML, YXML
name: Deploy React to EC2

on:
  # ~ 했을때
  push:
    # push 했을 때
    branches:
      # 브랜치에
      - main
      # 메인 브랜치에

jobs:
  # 작업들
  test:
    # 작업 명
    runs-on: ubuntu-latest
    # 작업 환경
    steps:
      # 작업들을 순서에 맞춰서 작성
      - name: "testing"
        # 작업명은 testing 이고
        run: echo "now test"
        # 작업 내용은 echo "now test"
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # 체크아웃 이라는걸 가져다 쓰겠다 JS에서 import

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.EC2_KEY }}

      - name: Ensure SSH directory exists
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh

      - name: Install dependencies of project
        working-directory: ./
        run: npm i

      - name: Build project
        working-directory: ./
        run: npm run build

      - name: Add SSH known hosts
        run: ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Copy files to EC2
        run: |
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "mkdir -p /var/www/html"
          rsync -avz -e "ssh" ./build/ ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/var/www/html
        # rsync == filezilla 파일을 넘겨줌
        # rsync -avz -e "ssh" ./build ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/var/www/html == 현재 폴더의 build 폴더를 EC2 유저로 EC2 인스턴스(HOST)에 접속해서 /var/www/html 폴더에 복사해 달라
        # -e "ssh" == 접속 방법에 대한 설정
        # -avz == 설정, 옵션
        # -a : 전부
        # -v : 모두 출력
        # -z : 권한, 소유자 그룹등 유지
